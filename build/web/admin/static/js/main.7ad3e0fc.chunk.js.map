{"version":3,"sources":["pages/NotFound.tsx","pages/SignIn.tsx","store/index.ts","store/atoms.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NotFound","useState","top","setTop","left","setLeft","useEffect","document","body","classList","add","window","addEventListener","event","pageY","pageX","remove","removeEventListener","Fragment","className","id","style","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","Container","component","maxWidth","CssBaseline","Avatar","noValidate","TextField","required","fullWidth","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","Button","Grid","container","item","xs","Box","mt","Store","FilesToUpload","atom","key","default","User","loggedIn","username","token","App","useRecoilValue","resetUser","useResetRecoilState","location","hash","path","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ad3e0fc.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"assets/scss/404.scss\";\nconst NotFound = () => {\n  const [top, setTop] = useState<number | null>(null);\n  const [left, setLeft] = useState<number | null>(null);\n  useEffect(() => {\n    document.body.classList.add(\"bg\");\n    window.addEventListener(\"mousemove\", (event) => {\n      setTop(event.pageY);\n      setLeft(event.pageX);\n    });\n    return () => {\n      document.body.classList.remove(\"bg\");\n      window.removeEventListener(\"mousemove\", (event) => {\n        setTop(event.pageY);\n        setLeft(event.pageX);\n      });\n    };\n  });\n  return (\n    <React.Fragment>\n      <div className=\"text\">\n        <h1>404</h1>\n        <h2>Uh, Ohh</h2>\n        <h3>\n          Sorry we cant find what you are looking for 'cuz its so dark in here\n        </h3>\n      </div>\n      <div\n        className=\"torch\"\n        id=\"torch\"\n        style={{ top: top as number, left: left as number }}\n      ></div>\n    </React.Fragment>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignIn = () => {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import { FilesToUpload, User } from \"store/atoms\";\n\nconst Store = {\n    FilesToUpload: FilesToUpload,\n    User: User\n}\n\nexport default Store","import { atom } from \"recoil\"\n\nconst FilesToUpload = atom<File[]>({\n    key: \"FILES\",\n    default: []\n})\n\nconst User = atom({\n    key: \"USER\",\n    default: {\n        loggedIn: false,\n        username: \"string\",\n        token: \"\"\n    }\n})\n\nexport { FilesToUpload, User }","import NotFound from \"pages/NotFound\";\nimport SignIn from \"pages/SignIn\";\nimport React, { Fragment, useEffect } from \"react\";\nimport {\n  Switch,\n  Route,\n  Redirect,\n  HashRouter,\n  useHistory,\n} from \"react-router-dom\";\nimport { useRecoilValue, useResetRecoilState } from \"recoil\";\nimport Store from \"store\";\n\nconst App = () => {\n  const loggedIn = useRecoilValue(Store.User).loggedIn;\n  const resetUser = useResetRecoilState(Store.User);\n  useEffect(() => {\n    if (loggedIn === false && window.location.hash !== \"#/signin\") {\n      resetUser();\n      window.location.hash = \"#/signin\";\n    }\n  }, [loggedIn]);\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/signin\" component={SignIn} />\n        {loggedIn && (\n          <Fragment>\n            <Route path=\"/\" />\n            <Route path=\"/edit/:cid\" />\n            <Route path=\"/add\" />\n          </Fragment>\n        )}\n        <Route path=\"/404\" component={NotFound} />\n        <Redirect to=\"/404\" />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}